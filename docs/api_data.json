[  {    "type": "post",    "url": "/list/gift",    "title": "Create a new Gift list",    "name": "NewWGiftList",    "group": "List",    "version": "0.0.1",    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "ValidationError",            "description": "<p>At least one field did not pass the validation.</p>"          }        ]      },      "examples": [        {          "title": "400 Error Example:",          "content": "{\n    \"result\": \"KO\",\n    \"code\": 400,\n    \"message\": \"\\\"eventCategory\\\" must be one of [compleanno, anniversario, laurea, diploma, vacanze, pensione, festa, altro]\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "{\n     \"result\": \"OK\",\n     \"code\": 200\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Identification": [          {            "group": "Identification",            "type": "Number",            "optional": false,            "field": "piva",            "description": "<p>Tax number of the agency who owns the gift list</p>"          }        ],        "List Data": [          {            "group": "List Data",            "type": "String",            "allowedValues": [              "'compleanno'",              "'anniversario'",              "'laurea'",              "'diploma'",              "'vacanze'",              "'pensione'",              "'festa'",              "'altro'"            ],            "optional": true,            "field": "eventCategory",            "description": "<p>Event category</p>"          },          {            "group": "List Data",            "type": "String",            "optional": true,            "field": "eventDate",            "description": "<p>Event date in format DD/MM/YYYY</p>"          },          {            "group": "List Data",            "type": "String",            "size": "6..30",            "optional": true,            "field": "cellphone",            "description": "<p>Cellphone of the owner of the list</p>"          }        ],        "Owner Data": [          {            "group": "Owner Data",            "type": "String",            "size": "2..30",            "optional": true,            "field": "ownerFirstName",            "description": "<p>Owner First name</p>"          },          {            "group": "Owner Data",            "type": "String",            "size": "2..30",            "optional": true,            "field": "ownerLastName",            "description": "<p>Owner Last name</p>"          },          {            "group": "Owner Data",            "type": "String",            "optional": true,            "field": "ownerBirthday",            "description": "<p>Birth date in format DD/MM/YYYY</p>"          },          {            "group": "Owner Data",            "type": "String",            "optional": true,            "field": "ownerTaxCoe",            "description": "<p>Owner's tax code in Codice fiscale format.</p>"          },          {            "group": "Owner Data",            "type": "String",            "size": "2..30",            "optional": true,            "field": "ownerOccupation",            "description": "<p>Owner's occupation</p>"          },          {            "group": "Owner Data",            "type": "Email",            "optional": true,            "field": "ownerEmail",            "description": "<p>Owner's email</p>"          }        ],        "Travel Data": [          {            "group": "Travel Data",            "type": "String",            "size": "2..300",            "optional": true,            "field": "travelTitle",            "description": "<p>Title of the travel</p>"          },          {            "group": "Travel Data",            "type": "String",            "size": "2..10000",            "optional": true,            "field": "travelDescription",            "description": "<p>Description of the travel</p>"          },          {            "group": "Travel Data",            "type": "String[]",            "optional": true,            "field": "travelPictures",            "description": "<p>Url of an image (can be repeated 5 times)</p>"          }        ],        "Travel Stage": [          {            "group": "Travel Stage",            "type": "Object[]",            "optional": true,            "field": "travelStages",            "description": "<p>Stages of the travel</p>"          },          {            "group": "Travel Stage",            "type": "String",            "size": "2..300",            "optional": true,            "field": "travelStages.title",            "description": "<p>Title of the stage</p>"          },          {            "group": "Travel Stage",            "type": "Number",            "optional": true,            "field": "travelStages.amount",            "description": "<p>Cost in eurocents of the stage</p>"          },          {            "group": "Travel Stage",            "type": "Number",            "optional": true,            "field": "travelStages.quoteNumber",            "description": "<p>Amount of quotes available</p>"          }        ]      }    },    "filename": "./doc-src.js",    "groupTitle": "List"  },  {    "type": "post",    "url": "/list/wedding",    "title": "Create a new Wedding list",    "name": "NewWeddingList",    "group": "List",    "version": "0.0.1",    "error": {      "fields": {        "Error 400": [          {            "group": "Error 400",            "optional": false,            "field": "ValidationError",            "description": "<p>At least one field did not pass the validation.</p>"          }        ]      },      "examples": [        {          "title": "400 Error Example:",          "content": "{\n    \"result\": \"KO\",\n    \"code\": 400,\n    \"message\": \"\\\"firstNameOne\\\" must only contain alpha-numeric characters\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "{\n     \"result\": \"OK\",\n     \"code\": 200\n}",          "type": "json"        }      ]    },    "parameter": {      "fields": {        "Identification": [          {            "group": "Identification",            "type": "Number",            "optional": false,            "field": "piva",            "description": "<p>Tax number of the agency who owns the wedding list</p>"          }        ],        "List Data": [          {            "group": "List Data",            "type": "String",            "size": "2..30",            "optional": true,            "field": "firstNameOne",            "description": "<p>First name of one of the spouse 1</p>"          },          {            "group": "List Data",            "type": "String",            "size": "2..30",            "optional": true,            "field": "lastNameOne",            "description": "<p>Last name of one of the spouse 1</p>"          },          {            "group": "List Data",            "type": "String",            "size": "2..30",            "optional": true,            "field": "lastNameTwo",            "description": "<p>Last name of one of the spouse 2</p>"          },          {            "group": "List Data",            "type": "String",            "optional": true,            "field": "eventDate",            "description": "<p>Event date in format DD/MM/YYYY</p>"          },          {            "group": "List Data",            "type": "String",            "optional": true,            "field": "eventProvince",            "description": "<p>Province of the event, in ISTAT format (http://www2.cciaa.cremona.it/studi/codici/province.html)</p>"          },          {            "group": "List Data",            "type": "String",            "size": "6..30",            "optional": true,            "field": "cellphone",            "description": "<p>Cellphone of one of the spouses</p>"          }        ],        "Owner Data": [          {            "group": "Owner Data",            "type": "String",            "size": "2..30",            "optional": true,            "field": "ownerFirstName",            "description": "<p>Owner First name</p>"          },          {            "group": "Owner Data",            "type": "String",            "size": "2..30",            "optional": true,            "field": "ownerLastName",            "description": "<p>Owner Last name</p>"          },          {            "group": "Owner Data",            "type": "String",            "optional": true,            "field": "ownerBirthday",            "description": "<p>Birth date in format DD/MM/YYYY</p>"          },          {            "group": "Owner Data",            "type": "String",            "optional": true,            "field": "ownerTaxCoe",            "description": "<p>Owner's tax code in Codice fiscale format.</p>"          },          {            "group": "Owner Data",            "type": "String",            "size": "2..30",            "optional": true,            "field": "ownerOccupation",            "description": "<p>Owner's occupation</p>"          },          {            "group": "Owner Data",            "type": "Email",            "optional": true,            "field": "ownerEmail",            "description": "<p>Owner's email</p>"          }        ],        "Travel Data": [          {            "group": "Travel Data",            "type": "String",            "size": "2..300",            "optional": true,            "field": "travelTitle",            "description": "<p>Title of the travel</p>"          },          {            "group": "Travel Data",            "type": "String",            "size": "2..10000",            "optional": true,            "field": "travelDescription",            "description": "<p>Description of the travel</p>"          },          {            "group": "Travel Data",            "type": "String[]",            "optional": true,            "field": "travelPictures",            "description": "<p>Url of an image (can be repeated 5 times)</p>"          }        ],        "Travel Stage": [          {            "group": "Travel Stage",            "type": "Object[]",            "optional": true,            "field": "travelStages",            "description": "<p>Stages of the travel</p>"          },          {            "group": "Travel Stage",            "type": "String",            "size": "2..300",            "optional": true,            "field": "travelStages.title",            "description": "<p>Title of the stage</p>"          },          {            "group": "Travel Stage",            "type": "Number",            "optional": true,            "field": "travelStages.amount",            "description": "<p>Cost in eurocents of the stage</p>"          },          {            "group": "Travel Stage",            "type": "Number",            "optional": true,            "field": "travelStages.quoteNumber",            "description": "<p>Amount of quotes available</p>"          }        ]      }    },    "filename": "./doc-src.js",    "groupTitle": "List"  },  {    "type": "get",    "url": "/user/:id",    "title": "Read data of a User",    "version": "0.3.0",    "name": "GetUser",    "group": "User",    "permission": [      {        "name": "admin",        "title": "Admin access rights needed.",        "description": "<p>Optionally you can write here further Informations about the permission.</p> <p>An &quot;apiDefinePermission&quot;-block can have an &quot;apiVersion&quot;, so you can attach the block to a specific version.</p>"      }    ],    "description": "<p>Compare Verison 0.3.0 with 0.2.0 and you will see the green markers with new items in version 0.3.0 and red markers with removed items since 0.2.0.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/user/4711",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "registered",            "description": "<p>Registration Date.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "name",            "description": "<p>Fullname of the User.</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "nicknames",            "description": "<p>List of Users nicknames (Array of Strings).</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "profile",            "description": "<p>Profile data (example for an Object)</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "profile.age",            "description": "<p>Users age.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "profile.image",            "description": "<p>Avatar-Image.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "options",            "description": "<p>List of Users options (Array of Objects).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "options.name",            "description": "<p>Option Name.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "options.value",            "description": "<p>Option Value.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoAccessRight",            "description": "<p>Only authenticated Admins can access the data.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "HTTP/1.1 401 Not Authenticated\n{\n  \"error\": \"NoAccessRight\"\n}",          "type": "json"        }      ]    },    "filename": "./node_modules/apidoc/example/example.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user/:id",    "title": "Read data of a User",    "version": "0.2.0",    "name": "GetUser",    "group": "User",    "permission": [      {        "name": "admin",        "title": "This title is visible in version 0.1.0 and 0.2.0",        "description": ""      }    ],    "description": "<p>Here you can describe the function. Multilines are possible.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "name",            "description": "<p>Fullname of the User.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/_apidoc.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user/:id",    "title": "Read data of a User",    "version": "0.1.0",    "name": "GetUser",    "group": "User",    "permission": [      {        "name": "admin",        "title": "This title is visible in version 0.1.0 and 0.2.0",        "description": ""      }    ],    "description": "<p>Here you can describe the function. Multilines are possible.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "name",            "description": "<p>Fullname of the User.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The error description text in version 0.1.0.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/_apidoc.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/user",    "title": "Create a new User",    "version": "0.3.0",    "name": "PostUser",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>In this case &quot;apiErrorStructure&quot; is defined and used. Define blocks with params that will be used in several functions, so you dont have to rewrite them.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The new Users-ID.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/example.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoAccessRight",            "description": "<p>Only authenticated Admins can access the data.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNameTooShort",            "description": "<p>Minimum of 5 characters required.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/user",    "title": "Create a User",    "version": "0.2.0",    "name": "PostUser",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>In this case &quot;apiErrorStructure&quot; is defined and used. Define blocks with params that will be used in several functions, so you dont have to rewrite them.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/_apidoc.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoAccessRight",            "description": "<p>Only authenticated Admins can access the data.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNameTooShort",            "description": "<p>Minimum of 5 characters required.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/user/:id",    "title": "Change a User",    "version": "0.3.0",    "name": "PutUser",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>This function has same errors like POST /user, but errors not defined again, they were included with &quot;apiErrorStructure&quot;</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/example.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoAccessRight",            "description": "<p>Only authenticated Admins can access the data.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNameTooShort",            "description": "<p>Minimum of 5 characters required.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",          "type": "json"        }      ]    }  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./node_modules/apidoc/template/main.js",    "group": "_Users_domingosarmiento_WebstormProjects_touroperator_doc_node_modules_apidoc_template_main_js",    "groupTitle": "_Users_domingosarmiento_WebstormProjects_touroperator_doc_node_modules_apidoc_template_main_js",    "name": ""  }]
